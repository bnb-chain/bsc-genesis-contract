const web3 = require("web3")

// Configure
const validators = [
  {% for v in validators %}
   {
     "consensusAddr": "{{ v.consensusAddr }}",
     "feeAddr": "{{ v.feeAddr }}",
     "bscFeeAddr": "{{ v.bscFeeAddr }}",
     "votingPower": "{{ v.votingPower }}",
   },{% endfor %}
];

// ===============  Do not edit below ====
function generateExtradata(validators) {
  let extraVanity =Buffer.alloc(32);
  let validatorsBytes = extraDataSerialize(validators);
  let extraSeal =Buffer.alloc(65);
  return Buffer.concat([extraVanity,validatorsBytes,extraSeal]);
}

function validatorUpdateRlpEncode(validators) {
  let pkg = [];
  pkg.push(0x00);
  let n = validators.length;
  let vals = [];
  for(let i = 0;i<n;i++) {
    vals.push([
      web3.utils.hexToBytes(validators[i].consensusAddr),
      web3.utils.hexToBytes(validators[i].feeAddr),
      web3.utils.hexToBytes(validators[i].bscFeeAddr),
      web3.utils.hexToBytes(validators[i].votingPower),
    ]);
  }
  pkg.push(vals);
  return RLP.encode(pkg)
}

extraValidatorBytes = generateExtradata(validators);
validatorSetBytes = validatorUpdateRlpEncode(validators);

exports = module.exports = {
  extraValidatorBytes: extraValidatorBytes,
  validatorSetBytes: validatorSetBytes,
}
